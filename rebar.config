%%%----------------------------------------------------------------------
%%%
%%% ejabberd, Copyright (C) 2002-2019   ProcessOne
%%%
%%% This program is free software; you can redistribute it and/or
%%% modify it under the terms of the GNU General Public License as
%%% published by the Free Software Foundation; either version 2 of the
%%% License, or (at your option) any later version.
%%%
%%% This program is distributed in the hope that it will be useful,
%%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%%% General Public License for more details.
%%%
%%% You should have received a copy of the GNU General Public License along
%%% with this program; if not, write to the Free Software Foundation, Inc.,
%%% 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
%%%
%%%----------------------------------------------------------------------

{deps, [{lager, ".*", {git, "https://github.com/erlang-lager/lager", "3.6.10"}},
        {raven_erlang, ".*", {git, "git@github.com:HalloAppInc/ha_raven-erlang.git", {tag, "h1.0.3"}}},
        {erlcloud, ".*", {git, "git@github.com:HalloAppInc/halloapp-erlcloud.git", {tag, "3.2.15-ha2.4"}}},
        {gpb, ".*", {git, "git@github.com:HalloAppInc/gpb.git", {tag, "h1.3"}}},
        {enif_protobuf, ".*", {git, "git@github.com:HalloAppInc/enif_protobuf.git", {tag, "h1.7"}}},
        {gun, ".*", {git, "https://github.com/ninenines/gun", {tag, "2.0.0-pre.2"}}},
        {ecredis_crc16, ".*", {git, "git@github.com:HalloAppInc/ecredis-crc16.git", {tag, "1.4"}}},
        {crc16, ".*", {git, "https://github.com/building39/crc16_nif", {tag, "1.1"}}},
        {uuid, ".*", {git, "git@github.com:HalloAppInc/halloapp-erlang-uuid.git", {branch, "master"}}},
        {p1_utils, ".*", {git, "https://github.com/processone/p1_utils", {tag, "1.0.16"}}},
        {cache_tab, ".*", {git, "https://github.com/processone/cache_tab", {tag, "1.0.27"}}},
        {fast_tls, ".*", {git, "https://github.com/processone/fast_tls", {tag, "1.1.11"}}},
        {stringprep, ".*", {git, "https://github.com/processone/stringprep", {tag, "1.0.24"}}},
        {fast_xml, ".*", {git, "https://github.com/processone/fast_xml", {tag, "1.1.45"}}},
        {xmpp, ".*", {git, "git@github.com:HalloAppInc/halloapp-xmpp.git", {tag, "h1.80"}}},
        {fast_yaml, ".*", {git, "https://github.com/processone/fast_yaml", {tag, "1.0.30"}}},
        {yconf, ".*", {git, "https://github.com/processone/yconf", {tag, "1.0.1"}}},
        {jiffy, ".*", {git, "git@github.com:HalloAppInc/jiffy.git", {tag, "h1.0"}}},
        {pkix, ".*", {git, "https://github.com/processone/pkix", {tag, "1.0.4"}}},
        {eimp, ".*", {git, "https://github.com/processone/eimp", {tag, "1.0.19"}}},
        {eredis, ".*", {git, "https://github.com/Nordix/eredis.git", {tag, "v1.4.1"}}},
        {eredis_cluster, ".*", {git, "https://github.com/HalloAppInc/eredis_cluster", {tag, "0.6.1"}}},
        {ha_enoise, ".*", {git, "git@github.com:HalloAppInc/ha_enoise.git", {tag, "h1.10"}}},
        {ecredis, ".*", {git, "git@github.com:HalloAppInc/ecredis.git", {tag, "0.3.1"}}},
        {argparse, ".*", {git, "https://github.com/max-au/argparse.git", {tag, "1.1.0"}}},
        {prometheus, ".*", {git, "https://github.com/HalloAppInc/prometheus.erl", {branch, "ha"}}},
        {iso8601, ".*", {git, "https://github.com/erlsci/iso8601.git", {tag, "1.3.1"}}},
        {jose, ".*", {git, "https://github.com/potatosalad/erlang-jose", {tag, "1.8.4"}}},
        {supervisor3, ".*", {git, "https://github.com/klarna/supervisor3", {tag, "1.1.11"}}},
        {erlcron, ".*", {git, "https://github.com/erlware/erlcron", {tag, "1.1.0"}}},
        %% Elixir support, needed to run tests
        {if_var_true, elixir, {elixir, ".*", {git, "https://github.com/elixir-lang/elixir",
                                              {tag, {if_version_above, "17", "v1.4.4", "v1.1.1"}}}}},
        %% TODO: When modules are fully migrated to new structure and mix, we will not need anymore rebar_elixir_plugin
        {if_not_rebar3, {if_var_true, elixir, {rebar_elixir_plugin, ".*",
                                               {git, "https://github.com/processone/rebar_elixir_plugin", "0.1.0"}}}},
        {if_var_true, tools, {luerl, ".*", {git, "https://github.com/rvirding/luerl",
                                            {tag, "v0.3"}}}},
        {if_var_true, redis, {eredis, ".*", {git, "https://github.com/wooga/eredis",
                                             {tag, "v1.0.8"}}}}]}.


{port_env, [
    {"ERL_LDFLAGS"  , " -L$ERL_EI_LIBDIR -lei"}
]}.


{if_var_true, latest_deps,
 {floating_deps, [cache_tab,
                  fast_tls,
                  stringprep,
                  fast_xml,
                  esip,
                  stun,
                  fast_yaml,
                  xmpp,
                  p1_utils,
                  p1_oauth2,
                  eimp,
                  pkix,
                  yconf]}}.

{erl_first_files, ["src/ejabberd_config.erl",
                 "src/gen_mod.erl",
                 "src/mod_push.erl", "src/xmpp_socket.erl"]}.

{erl_opts, [nowarn_deprecated_function,
            {i, "include"},
            {i, "include/proto"},
            {i, "deps/fast_xml/include"},
            {i, "deps/xmpp/include"},
            {i, "deps/p1_utils/include"},
            {i, "deps/erlcloud/include"},
            {i, "deps/enif_protobuf/include"},
            {i, "deps/gpb/include"},
            {i, "deps/ha_enoise/include"},
            {i, "deps/eredis_cluster/include"},
            {if_var_false, debug, no_debug_info},
            {if_var_true, debug, debug_info},
            {if_var_true, sip, {d, 'SIP'}},
            {if_var_true, stun, {d, 'STUN'}},
            {if_version_above, "20", {d, 'DEPRECATED_GET_STACKTRACE'}},
            {if_var_true, roster_gateway_workaround, {d, 'ROSTER_GATWAY_WORKAROUND'}},
            {if_var_true, elixir, {d, 'ELIXIR_ENABLED'}},
            {if_var_true, hipe, native},
            {if_have_fun, {erl_error, format_exception, 6}, {d, 'HAVE_ERL_ERROR'}},
            %% Extra sync for tracing XMPP messages.
            {lager_extra_sinks, [xmpp_trace, phone_norm]},
            {lager_truncation_size, 15360}, %% 15KB
            {src_dirs, [src,
                        {if_var_true, tools, tools},
                        {if_var_true, elixir, include}]}]}.

{deps_erl_opts, [{if_var_true, hipe, native}]}.

{if_rebar3, {plugins, [rebar3_hex, {provider_asn1, "0.2.0"}]}}.
{if_not_rebar3, {plugins, [
                           deps_erl_opts, override_deps_versions, override_opts, configure_deps,
                           {if_var_true, elixir, rebar_elixir_compiler},
                           {if_var_true, elixir, rebar_exunit}
                          ]}}.

{if_var_true, elixir,
              {lib_dirs, ["deps/elixir/lib"]}}.
{if_var_true, elixir,
              {src_dirs, ["include"]}}.

{sub_dirs, ["rel"]}.

{keep_build_info, true}.

{xref_warnings, false}.

{xref_checks, [undefined_function_calls, deprecated_function_calls]}.

{xref_exclusions, [
                   "(\"gen_transport\":_/_)",
                   "(\"eprof\":_/_)",
                   {if_var_false, pam, "(\"epam\":_/_)"},  % Try to delete this
                   {if_var_false, zlib, "(\"ezlib\":_/_)"},
                   {if_var_false, http, "(\"lhttpc\":_/_)"},
                   {if_var_false, odbc, "(\"odbc\":_/_)"},
                   {if_var_false, elixir, "(\"Elixir.*\":_/_)"},
                   {if_var_false, redis, "(\"eredis\":_/_)"}]}.

{eunit_compile_opts, [{i, "tools"},
                      {i, "include"},
                      {i, "include/proto"},
                      {i, "deps/p1_utils/include"},
                      {i, "deps/fast_xml/include"},
                      {i, "deps/enif_protobuf/include"},
                      {i, "deps/gpb/include"},
                      {i, "deps/xmpp/include"}]}.

%% Uncomment to get eunit verbose info
%% {eunit_opts, [verbose, {report, eunit_surefire,[{dir, "."}]}]}.

%% == Proto compiler ==
{proto_opts, [
              {compiler, gpb},
              {src_dirs, ["proto"]}
             ]}.
%% Available compilers for protocol buffer files (*.proto):
%%   protobuffs  (default)
%%   gpb
%% Optional src_dirs which is a list of directories where
%% to look for .proto files, default is src

%% Options for the gpb protocol buffer compiler,
%% if selected by the proto_compiler option
{gpb_opts, [{type_specs, false},
            {type_specs_hrl, true},
            {msg_name_prefix, "pb"},
            {msg_name_to_snake_case, true},
            {msg_name_to_lower, true},
            {rename, {enum_fieldname, lowercase}},
            {o_erl, "src/proto/"},
            {o_hrl, "include/proto/"},
            {strings_as_binaries, true},
            {oneof_as_tuples, false},
            {json, true},
            {json_format, jiffy},
            {json_preserve_proto_field_names, true},
            {json_always_print_primitive_fields, true}]}.

{cover_enabled, false}.
{cover_export_enabled, false}.
{recursive_cmds, ['configure-deps']}.

{overrides, [
  {del, [{erl_opts, [warnings_as_errors]}]}]}.

{post_hook_configure, [{"fast_tls", []},
                       {"stringprep", []},
                       {"fast_yaml", []},
                       {"eimp", []},
                       {if_var_true, sip, {"esip", []}},
                       {"fast_xml", [{if_var_true, full_xml, "--enable-full-xml"}]}]}.


%% Local Variables:
%% mode: erlang
%% End:
%% vim: set filetype=erlang tabstop=8:
