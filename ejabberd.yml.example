###
###              ejabberd configuration file
###
### The parameters used in this configuration file are explained at
###
###       https://docs.ejabberd.im/admin/configuration
###
### The configuration file is written in YAML.
### *******************************************************
### *******           !!! WARNING !!!               *******
### *******     YAML IS INDENTATION SENSITIVE       *******
### ******* MAKE SURE YOU INDENT SECTIONS CORRECTLY *******
### *******************************************************
### Refer to http://en.wikipedia.org/wiki/YAML for the brief description.
###

hosts:
  - "s.halloapp.net"
  - localhost

loglevel: 4
log_rotate_size: 10485760
log_rotate_date: ""
log_rotate_count: 1
log_rate_limit: 100

## If you already have certificates, list them here
certfiles:
  - /etc/letsencrypt/live/s.halloapp.net/*.pem

listen:
  -
    port: 5222
    ip: "::"
    module: ejabberd_c2s
    max_stanza_size: 262144
    shaper: c2s_shaper
    access: c2s
    starttls_required: true
  -
    port: 5269
    ip: "::"
    module: ejabberd_s2s_in
    max_stanza_size: 524288
  -
    port: 5443
    ip: "::"
    module: ejabberd_http
#    tls: true
    request_handlers:
      /admin: ejabberd_web_admin
      /api: mod_http_api
      /bosh: mod_bosh
      /captcha: ejabberd_captcha
      /upload: mod_http_upload
      /ws: ejabberd_http_ws
  -
    port: 5280
    ip: "::"
    module: ejabberd_http
    request_handlers:
      /admin: ejabberd_web_admin
      /.well-known/acme-challenge: ejabberd_acme
  -
    port: 1883
    ip: "::"
    module: mod_mqtt
    backlog: 1000

s2s_use_starttls: optional

acme:
  auto: false

acl:
  local:
    user_regexp: ""
  loopback:
    ip:
      - 127.0.0.0/8
      - ::1/128

access_rules:
  local:
    allow: local
  c2s:
    deny: blocked
    allow: all
  announce:
    allow: admin
  configure:
    allow: admin
  muc_create:
    allow: local
  pubsub_createnode:
    allow: local
  trusted_network:
    allow: loopback

api_permissions:
  "console commands":
    from:
      - ejabberd_ctl
    who: all
    what: "*"
  "admin access":
    who:
      access:
        allow:
          acl: loopback
          acl: admin
      oauth:
        scope: "ejabberd:admin"
        access:
          allow:
            acl: loopback
            acl: admin
    what:
      - "*"
      - "!stop"
      - "!start"
  "public commands":
    who:
      ip: 127.0.0.1/8
    what:
      - register
      - unregister
      - enroll
      - unenroll
      - get_user_passcode
      - status
      - connected_users_number
      - register_push
      - unregister_push

shaper:
  normal: 1000
  fast: 50000
  express: 100000

shaper_rules:
  max_user_sessions: 10
  max_user_offline_messages:
    5000: admin
    100: all
  c2s_shaper:
    none: admin
    ## The previous shaper rule of normal: 1000 bytes/second was very slow for the clients
    ## in order to send large packets to the server, especially for things like contacts sync.
    ## Therefore, we added a much higher limit for all the users.
    express: all
  s2s_shaper: fast

modules:
  mod_adhoc: {}
  mod_admin_extra: {}
  mod_announce:
    access: announce
  mod_avatar: {}
  mod_blocking: {}
  mod_bosh: {}
  mod_caps: {}
  mod_carboncopy: {}
  mod_client_state: {}
  mod_configure: {}
  mod_disco: {}
  mod_fail2ban: {}
  mod_http_api: {}
  mod_http_upload:
    put_url: https://@HOST@:5443/upload
  mod_last: {}
  mod_mam:
    ## Mnesia is limited to 2GB, better to use an SQL backend
    ## For small servers SQLite is a good fit and is very easy
    ## to configure. Uncomment this when you have SQL configured:
    ## db_type: sql
    assume_mam_usage: true
    default: always
  mod_mqtt: {}
  mod_muc:
    access:
      - allow
    access_admin:
      - allow: admin
    access_create: muc_create
    access_persistent: muc_create
    access_mam:
      - allow
    default_room_options:
      mam: true
  mod_muc_admin: {}
  mod_offline:
    access_max_user_messages: max_user_offline_messages
  mod_ping: {}
  mod_privacy: {}
  mod_private: {}
  mod_proxy65:
    access: local
    max_connections: 5
  mod_pubsub:
    access_createnode: pubsub_createnode
    plugins:
      - flat
      - pep
    default_node_config:
      notification_type: normal
      ## The event notification from pubsub will now specify the publisher of the pubsub item in the stanza
      itemreply: publisher
      ## Using a large value to indicate the number of items that can be stored in a node: max-value of 32-bit integer
      max_items: 2147483647
      ## uncomment the below line to specify a default config option for items to expire on the node.
      ## currently, contacts also use pubsub nodes. So, clients need to configure this config option for the feed node.
      ## item_expire: 2592000      ## number of seconds in 30days.
    force_node_config:
      ## Avoid buggy clients to make their bookmarks public
      storage:bookmarks:
        access_model: whitelist
    purge_expired_items:        ## run the cron job to purge items every hour.
      time: 12
      units: hours
      timer_type: interval
  mod_push: {}
  mod_push_keepalive: {}
  mod_register:
    ## Only accept registration requests from the "trusted"
    ## network (see access_rules section above).
    ## Think twice before enabling registration from any
    ## address. See the Jabber SPAM Manifesto for details:
    ## https://github.com/ge0rg/jabber-spam-fighting-manifesto
    ip_access: trusted_network
  mod_roster:
    versioning: true
  mod_s2s_dialback: {}
  mod_shared_roster: {}
  mod_stream_mgmt:
    resend_on_timeout: if_offline
  mod_vcard: {}
  mod_vcard_xupdate: {}
  mod_version:
    show_os: false
  mod_phone_number_normalization: {}
  mod_cron: {}
  mod_upload_media:
    aws_media_bucket: halloapp-media
    aws_access_key: AKIAVF4QDF4XGG2RWWGY
    aws_secret_access_key: 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
  mod_push_notifications:
    apns:
      gateway: gateway.push.apple.com
      certfile: /etc/apns_certs/prod.pem
      port: 2195
    fcm:
      gateway: https://fcm.googleapis.com/fcm/send
      apikey: AAAAvj9GcS4:APA91bG23sLvgswlU5tG6X_Hk1Y8JfSHx_T1M2g6E8O34f2h6tCHmgVQazWQN5rxmwj87n2RfgL8eWSFMxYB7lv6KDwtnbh9vwXg-dhqnzNka3Z9Ox74q-5INdr2QqYOLVvRIlLB9Mnz

### Local Variables:
### mode: yaml
### End:
### vim: set filetype=yaml tabstop=8
