###
###              ejabberd configuration file
###
### The parameters used in this configuration file are explained at
###
###       https://docs.ejabberd.im/admin/configuration
###
### The configuration file is written in YAML.
### *******************************************************
### *******           !!! WARNING !!!               *******
### *******     YAML IS INDENTATION SENSITIVE       *******
### ******* MAKE SURE YOU INDENT SECTIONS CORRECTLY *******
### *******************************************************
### Refer to http://en.wikipedia.org/wiki/YAML for the brief description.
###

hosts:
  - "s.halloapp.net"

### loglevel is now controlled by the environment localhost,test is 5, prod is 4
### loglevel: 5
### 100MB
log_rotate_size: 104857600
### Rotate at midnight
log_rotate_date: "$D0"
log_rotate_count: 10
log_rate_limit: 5000


## If you already have certificates, list them here
certfiles:
  - /etc/ejabberd_certs/s.halloapp.net/*.pem

listen:
  -
    port: 5222
    ip: "::"
    module: ejabberd_c2s
    max_stanza_size: 262144
    shaper: c2s_shaper
    access: c2s
    starttls_required: true
  -
    port: 5210
    ip: "::"
    module: halloapp_c2s
    max_stanza_size: 262144
    shaper: c2s_shaper
    access: c2s
  -
    port: 5269
    ip: "::"
    module: ejabberd_s2s_in
    max_stanza_size: 524288
  -
    port: 5443
    ip: "::"
    module: ejabberd_http
#    tls: true
    request_handlers:
      /admin: ejabberd_web_admin
      /api: mod_http_api
      /bosh: mod_bosh
      /captcha: ejabberd_captcha
      /upload: mod_http_upload
      /ws: ejabberd_http_ws
  -
    port: 5280
    ip: "::"
    module: ejabberd_http
    request_handlers:
      /admin: ejabberd_web_admin
      /.well-known/acme-challenge: ejabberd_acme
  -
    port: 1883
    ip: "::"
    module: mod_mqtt
    backlog: 1000

  -
    port: 5580
    ip: "::"
    module: ejabberd_http
    request_handlers:
      /api: mod_halloapp_http_api

s2s_use_starttls: optional

acme:
  auto: false

acl:
  local:
    user_regexp: ""
  loopback:
    ip:
      - 127.0.0.0/8
      - ::1/128

access_rules:
  local:
    allow: local
  c2s:
    deny: blocked
    allow: all
  announce:
    allow: admin
  configure:
    allow: admin
  muc_create:
    allow: local
  pubsub_createnode:
    allow: local
  trusted_network:
    allow: loopback

api_permissions:
  "console commands":
    from:
      - ejabberd_ctl
    who: all
    what: "*"
  "admin access":
    who:
      access:
        allow:
          acl: loopback
          acl: admin
      oauth:
        scope: "ejabberd:admin"
        access:
          allow:
            acl: loopback
            acl: admin
    what:
      - "*"
      - "!stop"
      - "!start"
  "public commands":
    who:
      ip: 127.0.0.1/8
    what:
      - register
      - unregister
      - enroll
      - unenroll
      - get_user_passcode
      - status
      - connected_users_number
      - register_push
      - unregister_push
      - migrate_all_contacts
      - migrate_accounts

shaper:
  normal: 1000
  fast: 50000
  express: 100000

shaper_rules:
  max_user_sessions: 10
  max_user_offline_messages:
    5000: admin
    5000: all
  c2s_shaper:
    none: admin
    ## The previous shaper rule of normal: 1000 bytes/second was very slow for the clients
    ## in order to send large packets to the server, especially for things like contacts sync.
    ## Therefore, we added a much higher limit for all the users.
    express: all
  s2s_shaper: fast

modules:
  mod_user_avatar: {}
  mod_groups_api: {}
  mod_groups: {}
  mod_ha_stats: {}
  mod_halloapp_http_api: {}
  mod_http_api: {}
  mod_http_upload:
    put_url: https://@HOST@:5443/upload
  mod_invites: {}
  mod_last: {}
  mod_offline_halloapp: {}
  mod_ping:
    send_pings: true
    ping_interval: 120
    ping_ack_timeout: 30
    timeout_action: kill
  mod_props: {}
  mod_feed_mnesia: {}
  mod_feed: {}
  mod_ha_feed: {}
  mod_sms: {}
  mod_user_session: {}
  mod_contacts: {}
  mod_names: {}
  mod_chat: {}
  mod_user_activity: {}
  mod_cron:
    tasks:
      - time: 1
        units: hours
        module: ejabberd_admin
        function: backup_mnesia
        arguments:
          - "/usr/local/var/lib/ejabberd/halloapp.backup"
        timer_type: interval
  mod_whisper: {}
  mod_upload_media:
    aws_media_region: us-east-1
    ## Accelerated dualstack endpoint.                                          
    ## Ref: https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html
    aws_media_put_host: us-e-halloapp-media.s3-accelerate.dualstack.amazonaws.com
    ## Cloudfront based distribution.
    ## Ref: https://aws.amazon.com/premiumsupport/knowledge-center/cloudfront-https-requests-s3/
    aws_media_get_host: u-cdn.halloapp.net
    ## Resumable upload server internal host name.
    upload_host: u1.ha
    ## Resumable upload server port.
    upload_port: 1080
  mod_receipts: {}
  mod_presence_subscription: {}
  mod_client_version:
    max_days: 30
  mod_push_tokens: {}
  mod_push_notifications: {}
  mod_ios_push:
    apns:
      gateway: api.push.apple.com
      certfile: /etc/apns_certs/prod.pem
      port: 443
      dev_gateway: api.sandbox.push.apple.com
      dev_certfile: /etc/apns_certs/dev.pem
      dev_port: 443
  ## TODO(murali@): move the api key to secrets manager
  mod_android_push:
    fcm:
      gateway: https://fcm.googleapis.com/fcm/send
      apikey: AAAAvj9GcS4:APA91bG23sLvgswlU5tG6X_Hk1Y8JfSHx_T1M2g6E8O34f2h6tCHmgVQazWQN5rxmwj87n2RfgL8eWSFMxYB7lv6KDwtnbh9vwXg-dhqnzNka3Z9Ox74q-5INdr2QqYOLVvRIlLB9Mnz
  mod_ack_halloapp: {}
  mod_trace: {}
  mod_redis: {}
  mod_libphonenumber: {}
  mod_user_privacy: {}
  model_phone: {}
  model_friends: {}
  model_accounts: {}
  model_privacy: {}
  model_contacts: {}
  model_messages: {}
  model_auth: {}
  model_whisper_keys: {}
  model_feed: {}
  stat: {}

### Local Variables:
### mode: yaml
### End:
### vim: set filetype=yaml tabstop=8
